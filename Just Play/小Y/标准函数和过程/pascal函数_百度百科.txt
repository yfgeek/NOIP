
pascal函数
百科名片
PASCAL内自带的函数，通常可以直接调用，特殊的需要调用数据库，如：used math


一、数学函数
　　inc(i) 使i:=i+1; 　　inc(i,b) 使i:=i+b; 　　dec(i) 使i:=i-1; 　　dec(i,b) 使i:=i-b; 
　　abs(x) 求x的绝对值。例：abs(-3)=3 　　chr(x) 求编号x对应的字符。例：chr(65)='A' chr(97)='a' 
chr(48)='0' 　　ord(x) 求字符x对应的编号。例：ord(‘A')=65 ord(‘a')=97 另外：ord(false)=0 
ord(true)=1 　　sqr(x) 求x的平方。例：sqr(4)=16 　　sqrt(x) 求x的正根。例：sqrt(16)=4 
(ps：负数是不能进行运算的，如果需要就要先取绝对值：sqrt(-4)是错的，应该为sqrt(abs(-4)) 　　round(x) 
求x的四舍五入。例：round(4.5)=5 　　trunc(x) 求x的整数部分。例：trunc(5.6)=5 结果是integer型 　　int(x) 
求x的整数部分。例：int(5.6)=5.0 结果是real型 　　frac (x) 求x的小数部分。例：frac(5.6)=0.6 　　pred(x) 
求x的前导。例：pred(‘b')='a' pred(5)=4 pred(true)=false 　　succ(x) 求x的后继。例：succ(‘b')='c' 
succ(5)=6 succ(false)=true 　　odd(x) 判断x是否为奇数。如果是值为true，反之值为false。例：odd(2)=false 
odd(5)=true 　　power(a,n) 求a的n次方。例：power(2,3)=8 {只有在开启math库时才可以使用} 　　random 
取0~1之间的随机数(不能取到1) 。 　　randomize 随机数的种子函数，在每次设置随机数时都要把这个函数放在最前面。 
　　fillchar(a,sizeof(a),0) 数组初始化，即把数组a的值全部置为0 
；赋成布尔型变量也可以，但注意，赋成1或其他数字，计算机并不会把数组赋成你想要的值，却是其他的数字。 　　shr: x shr n 
把x换成二进制后向右移n位，相当于把x 除以 2^n。 　　shl: x shl n 把x换成二进制后向左移n位，相当于把x 乘以 2^n。 
　　max(x,y):返回x和y中的较大值。 　　min(x,y):返回x和y中的较小值。 　　　

      isalnum（测试字符是否为英文或数字） 
      相关函数 isalpha，isdigit，islower，isupper
      表头文件 #include<ctype.h>
      定义函数 int isalnum (int c)
      函数说明 检查参数c是否为英文字母或阿拉伯数字，在标准c中相当于使用“isalpha(c) || isdigit(c)”做测试。
      返回值 若参数c为字母或数字，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 /* 找出str 字符串中为英文字母或数字的字符*/#include < ctype.h>main(){char 
      str[]=”123c@#FDsP[e?”;int i;for (i=0;str[i]!=0;i++ )if ( isalnum(str[i])) 
      printf(“%c is an alphanumeric character\n”,str[i]);}
      执行 1 is an apphabetic character2 is an apphabetic character3 is an 
      apphabetic characterc is an apphabetic characterF is an apphabetic 
      characterD is an apphabetic characters is an apphabetic characterP is an 
      apphabetic charactere is an apphabetic character
      　

      isalpha （测试字符是否为英文字母） 
      相关函数 isalnum，islower，isupper
      表头文件 #include<ctype.h>
      定义函数 int isalpha (int c)
      函数说明 检查参数c是否为英文字母，在标准c中相当于使用“isupper(c)||islower(c)”做测试。
      返回值 若参数c为英文字母，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 /* 找出str 字符串中为英文字母的字符*/#include <ctype.h>main(){char 
      str[]=”123c@#FDsP[e?”;int i;for (i=0;str[i]!=0;i++)if(isalpha(str[i])) 
      printf(“%c is an alphanumeric character\n”,str[i]);}
      执行 c is an apphabetic characterF is an apphabetic characterD is an 
      apphabetic characters is an apphabetic characterP is an apphabetic 
      charactere is an apphabetic character
      　

      isascii（测试字符是否为ASCII 码字符） 
      相关函数 iscntrl
      表头文件 #include <ctype.h>
      定义函数 int isascii(int c);
      函数说明 检查参数c是否为ASCII码字符，也就是判断c的范围是否在0到127之间。
      返回值 若参数c为ASCII码字符，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 /* 判断int i是否具有对映的ASCII码字符*/#include<ctype.h>main(){int 
      i;for(i=125;i<130;i++)if(isascii(i))printf("%d is an ascii 
      character:%c\n",i,i);elseprintf("%d is not an ascii character\n",i);}
      执行 125 is an ascii character:}126 is an ascii character:~127 is an ascii 
      character:128 is not an ascii character129 is not an ascii character
      　

      iscntrl（测试字符是否为ASCII 码的控制字符） 
      相关函数 isascii
      表头文件 #include <ctype.h>
      定义函数 int iscntrl(int c)；
      函数说明 检查参数c是否为ASCII控制码，也就是判断c的范围是否在0到30之间。
      返回值 若参数c为ASCII控制码，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      　

      isdigit（测试字符是否为阿拉伯数字） 
      相关函数 isxdigit
      表头文件 #include<ctype.h>
      定义函数 int isdigit(int c)
      函数说明 检查参数c是否为阿拉伯数字0到9。
      返回值 若参数c为阿拉伯数字，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 /* 找出str字符串中为阿拉伯数字的字符*/#include<ctype.h>main(){char 
      str[]="123@#FDsP[e?";int i;for(i=0;str[i]!=0;i++)if(isdigit(str[i])) 
      printf("%c is an digit character\n",str[i]);}
      执行 1 is an digit character2 is an digit character3 is an digit character
      　

      isgraphis（测试字符是否为可打印字符） 
      相关函数 isprint
      表头文件 #include <ctype.h>
      定义函数 int isgraph (int c)
      函数说明 检查参数c是否为可打印字符，若c所对映的ASCII码可打印，且非空格字符则返回TRUE。
      返回值 若参数c为可打印字符，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 /* 判断str字符串中哪些为可打印字符*/#include<ctype.h>main(){char str[]="a5 @;";int 
      i;for(i=0;str[i]!=0;i++)if(isgraph(str[i])) printf("str[%d] is printable 
      character:%d\n",i,str[i]);}
      执行 str[0] is printable character:astr[1] is printable character:5str[3] is 
      printable character:@str[4] is printable character:;
      　

      islower（测试字符是否为小写字母） 
      相关函数 isalpha，isupper
      表头文件 #include<ctype.h>
      定义函数 int islower(int c)
      函数说明 检查参数c是否为小写英文字母。
      返回值 若参数c为小写英文字母，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 #include<ctype.h>main(){char str[]="123@#FDsP[e?";int 
      i;for(i=0;str[i]!=0;i++)if(islower(str[i])) printf("%c is a lower-case 
      character\n",str[i]);}
      执行 c is a lower-case characters is a lower-case charactere is a lower-case 
      character
      　

      isprint（测试字符是（否为可打印字符） 
      相关函数 isgraph
      表头文件 #include<ctype.h>
      定义函数 int isprint(int c);
      函数说明 检查参数c是否为可打印字符，若c所对映的ASCII码可打印，其中包含空格字符，则返回TRUE。
      返回值 若参数c为可打印字符，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 /* 判断str字符串中哪些为可打印字符包含空格字符*/#include<ctype.h>main(){char str[]="a5 
      @;";int i;for(i=0;str[i]!=0;i++)if(isprint(str[i])) printf("str[%d] is 
      printable character:%d\n",i,str[i]);}
      执行 str[0] is printable character:astr[1] is printable character:5str[2] is 
      printable character:str[3] is printable character:@str[4] is printable 
      character:;
      　

      isspace（测试字符是否为空格字符） 
      相关函数 isgraph
      表头文件 #include<ctype.h>
      定义函数 int isspace(int c)
      函数说明 
      检查参数c是否为空格字符，也就是判断是否为空格('')、定位字符('\t')、CR('\r')、换行('\n')、垂直定位字符('\v')或翻页('\f')的情况。
      返回值 若参数c为空格字符，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 /*将字符串str[]中内含的空格字符找出，并显示空格字符的ASCII码*/#include <ctype.h>main(){char 
      str="123c @# FD\tsP[e?\n";int 
      i;for(i=0;str[i]!=0;i++)if(isspace(str[i]))printf("str[%d] is a 
      white-space character:%d\n",i,str[i]);}
      执行 str[4] is a white-space character:32str[7] is a white-space 
      character:32str[10] is a white-space character:9 /* \t */str[16] is a 
      white-space character:10 /* \t */
      　

      ispunct（测试字符是否为标点符号或特殊符号） 
      相关函数 isspace，isdigit，isalpha
      表头文件 #inlude<ctype.h>
      定义函数 int ispunct(int c)
      函数说明 检查参数c是否为标点符号或特殊符号。返回TRUE也就是代表参数c为非空格、非数字和非英文字母。
      返回值 v若参数c为标点符号或特殊符号，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 /*列出字符串str中的标点符号或特殊符号*/#include <ctype.h>main(){char str[]="123c@ 
      #FDsP[e?";int i;for(i=0;str[i]!=0;i++)if(ispunct(str[i])) 
      printf("%c\n",str[i]);}
      执行 v@#[?
      　

      isupper（测试字符是否为大写英文字母） 
      相关函数 isalpha，islower
      表头文件 #include<ctype.h>
      定义函数 int isupper(int c)
      函数说明 检查参数c是否为大写英文字母。
      返回值 若参数c为大写英文字母，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 /*找出字符串str中为大写英文字母的字符*/#include <ctype.h>main(){char 
      str[]="123c@#FDsP[e?";int i;for(i=0;str[i]!=0;i++)if(isupper(str[i])) 
      printf("%c is an uppercase character\n",str[i]);}
      执行 F is an uppercase characterD is an uppercase characterP is an uppercase 
      character
      　

      isxdigit（测试字符是否为16进制数字） 
      相关函数 isalnum，isdigit
      表头文件 #include<ctype.h>
      定义函数 int isxdigit (int c)
      函数说明 检查参数c是否为16进制数字，只要c为下列其中一个情况则返回TRUE。16进制数字:0123456789ABCDEF。
      返回值 若参数c为16进制数字，则返回TRUE，否则返回NULL(0)。
      附加说明 此为宏定义，非真正函数。
      范例 /*找出字符串str中为十六进制数字的字符*/#include <ctype.h>main(){char 
      str[]="123c@#FDsP[e?";int i;for(i=0;str[i]!=0;i++)if(isxdigit(str[i])) 
      printf("%c is a hexadecimal digits\n",str[i]);}
      执行 1 is a hexadecimal digits2 is a hexadecimal digits3 is a hexadecimal 
      digitsc is a hexadecimal digitsF is a hexadecimal digitsD is a hexadecimal 
      digitse is a hexadecimal digits
      　
　　<< Back to man.ChinaUnix 　　　

      abs（计算整型数的绝对值） 
      相关函数 labs, fabs
      表头文件 #include<stdlib.h>
      定义函数 int abs (int j)
      函数说明 abs()用来计算参数j的绝对值，然后将结果返回。
      返回值 返回参数j的绝对值结果。
      范例 #ingclude <stdlib.h>main(){int ansert;answer = abs(-12);printf("|-12| = 
      %d\n", answer);}
      执行 |-12| = 12
      　

      acos（取反余弦函数数值） 
      相关函数 asin , atan , atan2 , cos , sin , tan
      表头文件 #include <math.h>
      定义函数 double acos (double x);
      函数说明 acos()用来计算参数x的反余弦值，然后将结果返回。参数x范围为－1至1之间，超过此范围则会失败。
      返回值 返回0至PI之间的计算结果，单位为弧度，在函数库中角度均以弧度来表示。
      错误代码 EDOM参数x超出范围。
      附加说明 使用GCC编译时请加入－lm。
      范例 #include <math.h>main (){double angle;angle = acos(0.5);printf("angle = 
      %f\n", angle);}
      执行 angle = 1.047198
      　

      asin（取反正弦函数值） 
      相关函数 acos , atan , atan2 , cos , sin , tan
      表头文件 #include <math.h>
      定义函数 double asin (double x)
      函数说明 asin()用来计算参数x的反正弦值，然后将结果返回。参数x范围为－1至1之间，超过此范围则会失败。
      返回值 返回－PI/2之PI/2之间的计算结果。
      错误代码 EDOM参数x超出范围
      附加说明 使用GCC编译时请加入－lm
      范例 #include<math.h>main(){double angle;angle = asin (0.5);printf("angle = 
      %f\n",angle);}
      执行 angle = 0.523599
      　

      atan（取反正切函数值） 
      相关函数 acos，asin，atan2，cos，sin，tan
      表头文件 #include<math.h>
      定义函数 double atan(double x);
      函数说明 atan()用来计算参数x的反正切值，然后将结果返回。
      返回值 返回-PI/2至PI/2之间的计算结果。
      附加说明 使用GCC编译时请加入-lm
      范例 #include<math.h>main(){double angle;angle =atan(1);printf("angle = 
      %f\n",angle);}
      执行 angle = 1.570796
      　

      atan2（取得反正切函数值） 
      相关函数 acos，asin，atan，cos，sin，tan
      表头文件 #include<math.h>
      定义函数 double atan2(double y,double x);
      函数说明 atan2()用来计算参数y/x的反正切值，然后将结果返回。
      返回值 返回-PI/2 至PI/2 之间的计算结果。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double angle;angle = atan2(1,2);printf("angle = 
      %f\n", angle);}
      执行 angle = 0.463648
      　

      ceil（取不小于参数的最小整型数） 
      相关函数 fabs
      表头文件 #include <math.h>
      定义函数 double ceil (double x);
      函数说明 ceil()会返回不小于参数x的最小整数值，结果以double形态返回。
      返回值 返回不小于参数x的最小整数值。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double value[ ]={4.8,1.12,-2.2,0};int i;for 
      (i=0;value[i]!=0;i++)printf("%f=>%f\n",value[i],ceil(value[i]));}
      执行 4.800000=>5.0000001.120000=>2.000000-2.200000=>-2.000000
      　

      cos（取余玄函数值） 
      相关函数 acos，asin，atan，atan2，sin，tan
      表头文件 #include<math.h>
      定义函数 double cos(double x);
      函数说明 cos()用来计算参数x 的余玄值，然后将结果返回。
      返回值 返回-1至1之间的计算结果。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double answer = cos(0.5);printf("cos (0.5) = 
      %f\n",answer);}
      执行 cos(0.5) = 0.877583
      　

      cosh（取双曲线余玄函数值） 
      相关函数 sinh，tanh
      表头文件 #include<math.h>
      定义函数 double cosh(double x);
      函数说明 cosh()用来计算参数x的双曲线余玄值，然后将结果返回。数学定义式为:(exp(x)+exp(-x))/2。
      返回值 返回参数x的双曲线余玄值。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double answer = cosh(0.5);printf("cosh(0.5) = 
      %f\n",answer);}
      执行 cosh(0.5) = 1.127626
      　

      exp（计算指数） 
      相关函数 log，log10，pow
      表头文件 #include<math.h>
      定义函数 double exp(double x);
      函数说明 exp()用来计算以e为底的x次方值，即ex值，然后将结果返回。
      返回值 返回e的x次方计算结果。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double answer;answer = exp (10);printf("e^10 
      =%f\n", answer);}
      执行 e^10 = 22026.465795
      　

      frexp（将浮点型数分为底数与指数） 
      相关函数 ldexp，modf
      表头文件 #include<math.h>
      定义函数 double frexp( double x, int *exp);
      函数说明 frexp()用来将参数x 的浮点型数切割成底数和指数。底数部分直接返回，指数部分则借参数exp 指针返回，将返回值乘以2 
      的exp次方即为x的值。
      返回值 返回参数x的底数部分，指数部分则存于exp指针所指的地址。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include <math.h>main(){int exp;double fraction;fraction = frexp 
      (1024,&exp);printf("exp = %d\n",exp);printf("fraction = %f\n", fraction);}
      执行 exp = 11fraction = 0.500000 /* 0.5*(2^11)=1024*/
      　

      ldexp（计算2的次方值） 
      相关函数 frexp
      表头文件 #include<math.h>
      定义函数 double ldexp(double x,int exp);
      函数说明 ldexp()用来将参数x乘上2的exp次方值，即x*2exp。
      返回值 返回计算结果。
      附加说明 使用GCC编译时请加入-lm。
      范例: /* 计算3*(2^2)＝12 */#include<math.h>main(){int exp;double 
      x,answer;answer = ldexp(3,2);printf("3*2^(2) = %f\n",answer);}
      执行 3*2^(2) = 12.000000
      　

      log（计算以e 为底的对数值） 
      相关函数 exp，log10，pow
      表头文件 #include <math.h>
      定义函数 double log (double x);
      函数说明 log（）用来计算以e为底的x 对数值，然后将结果返回。
      返回值 返回参数x的自然对数值。
      错误代码 EDOM 参数x为负数，ERANGE 参数x为零值，零的对数值无定义。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double answer;answer = log 
      (100);printf("log(100) = %f\n",answer);}
      执行 log(100) = 4.605170
      　

      log10（计算以10 为底的对数值） 
      相关函数 exp，log，pow
      表头文件 #include<math.h>
      定义函数 double log10(double x);
      函数说明 log10()用来计算以10为底的x对数值，然后将结果返回。
      返回值 返回参数x以10为底的对数值。
      错误代码 EDOM参数x为负数。RANGE参数x为零值，零的对数值无定义。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double answer;answer = 
      log10(100);printf("log10(100) = %f\n",answer);}
      执行 log10(100) = 2.000000
      　

      pow（计算次方值） 
      相关函数 exp，log，log10
      表头文件 #include<math.h>
      定义函数 double pow(double x,double y);
      函数说明 pow()用来计算以x为底的y次方值，即xy值，然后将结果返回。
      返回值 返回x的y次方计算结果。
      错误代码 EDOM 参数x为负数且参数y不是整数。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include <math.h>main(){double answer;answer =pow(2,10);printf("2^10 = 
      %f\n", answer);}
      执行 2^10 = 1024.000000
      　

      sin（取正玄函数值） 
      相关函数 acos，asin，atan，atan2，cos，tan
      表头文件 #include<math.h>
      定义函数 double sin(double x);
      函数说明 sin（）用来计算参数x的正玄值，然后将结果返回。
      返回值 返回-1 至1之间的计算结果。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double answer = sin (0.5);printf("sin(0.5) = 
      %f\n",answer);}
      执行 sin(0.5) = 0.479426
      　

      sinh（取双曲线正玄函数值） 
      相关函数 cosh，tanh
      表头文件 #include<math.h>
      定义函数 double sinh( double x);
      函数说明 sinh()用来计算参数x的双曲线正玄值，然后将结果返回。数学定义式为:(exp(x)-exp(-x))/2。
      返回值 返回参数x的双曲线正玄值。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double answer = sinh (0.5);printf("sinh(0.5) = 
      %f\n",answer);}
      执行 sinh(0.5) = 0.521095
      　

      sqrt（计算平方根值） 
      相关函数 hypotq
      表头文件 #include<math.h>
      定义函数 double sqrt(double x);
      函数说明 sqrt()用来计算参数x的平方根，然后将结果返回。参数x必须为正数。
      返回值 返回参数x的平方根值。
      错误代码 EDOM 参数x为负数。
      附加说明 使用GCC编译时请加入-lm。
      范例 /* 计算200的平方根值*/#include<math.h>main(){double root;root = sqrt 
      (200);printf("answer is %f\n",root);}
      执行 answer is 14.142136
      　

      tan（取正切函数值） 
      相关函数 atan，atan2，cos，sin
      表头文件 #include <math.h>
      定义函数 double tan(double x);
      函数说明 tan()用来计算参数x的正切值，然后将结果返回。
      返回值 返回参数x的正切值。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double answer = tan(0.5);printf("tan (0.5) = 
      %f\n",answer);}
      执行 tan(0.5) = 0.546302
      　

      tanh（取双曲线正切函数值） 
      相关函数 cosh，sinh
      表头文件 #include<math.h>
      定义函数 double tanh(double x);
      函数说明 tanh()用来计算参数x的双曲线正切值，然后将结果返回。数学定义式为:sinh(x)/cosh(x)。
      返回值 返回参数x的双曲线正切值。
      附加说明 使用GCC编译时请加入-lm。
      范例 #include<math.h>main(){double answer = tanh(0.5);printf("tanh(0.5) = 
      %f\n",answer);}
      执行 tanh(0.5) = 0.462117
      　

二、字符串函数
　　1. 连接运算 concat(s1,s2,s3…sn) 相当于s1+s2+s3+…+sn。 　　例：concat(‘11','aa')='11aa’; 
　　2. 求子串。 Copy(s,I,L) 从字符串s中截取第I个字符开始，长度为L的子串。 　　例：copy(‘abdag’,2,3)=’bda’ 　　3. 
删除子串。过程 Delete(s,I,l) 从字符串s中删除第I个字符开始，长度为l的子串。 
　　例：s:=’abcde’;delete(s,2,3);结果s:=’ae’ 　　4. 插入子串。 过程Insert(s1,s2,I) 
把s1插入到s2的第I个位置。 　　例：s:=abc;insert(‘12’,s,2);结果s:=’a12bc’ 　　5. 求字符串长度 length(s) 。 
　　例：length(‘12abc’)=5 　　6. 搜索子串的位置 pos(s1,s2) 如果s1是s2的子串 
，则返回s1的第一个字符在s2中的位置，若不是子串，则返回0。 　　例：pos(‘ab’,'12abcd’)=3 　　7. 字符的大写转换。Upcase(ch) 
求字符ch的大写体。 　　例：upcase(‘a’)='A’ 　　8. 数值转换为数串。 过程 Str(x,s) 把数值x化为数串s。 
　　例：str(12345,s); 结果s=’12345’ 　　9. 数串转换为数值。 过程val(s,x,I) 
把数串s转化为数值x,如果成功则I=0,不成功则I为无效字符的序数。 　　例：val(‘1234’,x,I);结果 x:=1234
编辑本段三、标准函数
　　标准函数。Turbo Pascal语言提供了自变量为整型量的标准函数有顺序函数算术函数和转换函数等。 　　标准函数是Turbo 
Pascal语言预先定义的，它们实际上是能完成特定功能的称步子程序的程序段。每个标准函数都用一个标识符来标识，每个标准函数都能完成一个特定的功能，在程序中可以直接调用它们。Turbo 
Pascal语言中某些标准函数与数学中的函数有相似之处。 　　一、整数类型函数 
　　整型是顺序类型，即所有的整型数都是按一定的顺序排列的。如3的后序数是4，350的后序数是351。以后介绍的布尔型、字符型、枚举类型和子界类型等都是顺序类型。顺序函数可以对顺序类型数据进行操作，但要注意它们自变量的取值范围。 
　　①前趋函数：Pred(x)函数值为x-l，例如： 　　Pred (6)=5 Pred (-21)=-22 　　②后继函数：Succ 
(x)函数值为x+l，例如： 　　Succ (l5)=16 Succ (-114)= -113 　　③绝对值函数：Abs (x)函数值为|X|，例如： 
　　Abs (-119)=119 Abs (101)=101 　　④平方函数：Sqr (x)函数值为X2，例如： 　　Sqr (-5)=25 Sqr (l0)= 
100 　　以上四个函数的结果仍是整型数。 　　⑤奇函数：Odd 
(x)，函数的结果为布尔型。当X为奇数时，函数值为true；当X为偶数时，函数值为false，例如： 　　Odd (13)= True Odd (16)= 
False 　　⑥字符函数：Chr (X)，函数值是序号的ASCII字符，属字符型，例如： 　　Chr (65)=’A’ Chr (66)=’B’ 
　　二、实数类型函数 　　在下列算术函数中，X可以是实型或整型数的表达式。对于函数Abs和Sqr，其结果类型和变量X的类型相同，其他算术函数的结果类型都是实型。 
　　绝对值函数Abs(x)：函数值为x的绝对值。 　　平方函数Sqr (x)：函数值为x的平方。 　　小数函数Frac (x)：函数值为x的小数部分。 
　　整数函数Int (x)：函数值为x的整数部分。 　　正弦函数Sin (x)：函数值为x的正弦，其中，的单位为弧度。 　　余弦函数Cos 
(x)：函数值为x的余弦，其中，的单位为弧度。 　　指数函数Exp (x)：函数值为e^x。 　　对数函数Ln (X)：函数值为x的自然对数。 
　　平方正根根函数的Sqrt (x)：函数值为x的平方正根。 　　反正切函数Arctan(x)：函数值为x的反正切，单位为弧度。 
　　随机函数Random：无自变量时，函数值取(0,1)间的随机小数；有自变量且为Word类型时，函数值取(0，自变量)间的随机整数。 　　三、字符类型函数 
　　Turbo Pascal语言提供如下自变量为字符型的标准函数，其中Chr为字符型。 　　后继函数Succ (ch)：例如，Succ (’8’)='9’ 
Succ (’E’)='F’ 　　对字符集的最后一个字符，Succ函数无意义。 　　前趋函数Pred (ch)：例如，Pred (’7’)='6’ Pred 
(’B’)=' A’ 　　序数函数Ord (ch)：:给出字符ch在ASCII字符集中的序号，结果为整型。 　　注意：Ord (’7’)<>7，正确的是：Ord 
(’7’)=Ord(’0’)+7=48+7=55 　　若ch是数字字符，则Ord (ch)-Ord ('0')是该数字字符的数值，例如：Ord 
(’7’)-Ord(’0’)=7 　　前面介绍的字符函数Chr (i)是Ord (ch)的逆函数，例如：Chr (55)= ’7’ Chr 
(Ord(’A’))='A’ 　　四、布尔类型函数 　　Turbo Pascal语言提供布尔型函数主要是几个字符型函数。 　　Ord (B) 例如：Ord 
(false)=0 Ord (true)=1。
编辑本段四、各单元的函数与过程
　　SYSTEM TP的运行库，包括常用的标准函数和过程，可以在程序中直接使用，不需USES语句说明。 　　DOS 具有日期、时间、目录查找、程序执行等功能 
　　CRT 具有屏幕模式控制、扩展键盘码、颜色、窗口、声音等功能 　　PRINTER 支持打印输出操作。 　　GRAPH 高级图形软件包，支持多种图形适配器。 
　　GRAPH3 实现TP3.0的图形软件包。 　　TURBO3 兼容TP3.0的源程序。 　　OVERLAY 实现高级覆盖管理
一、SYSTEM单元
　　ABS(X) F 求变量的绝对值 　　ADDR(X) F 测变量地址 　　APPEND(F) P 
打开一个存在的文本文件，并将文件指针指向文件末尾准备添加元素 　　ARCTAN(X) F 反正切 　　ASSIGN(F,C) P 
将字符串C所表示的外部文件名赋给文件变量F 　　ASSIGNED(X) P 测试程序当中的指针或变量是否为空 　　BLOCKREAD(F,D,NUM) P 
读类型文件。 　　BLOCKWRITE(F,D,NUM) P 写无类型文件 　　BREAK P 中止或结束循环 　　CHDIR(PATH) P 改变当前目录 
　　CHR(X) F 求ASCII码值为X的字符 　　CLOSE(F) P 关闭文件 　　CONCAT(S1,S2...S3） F 字符串合并 
　　CONTINUE P 继续循环 　　COPY(S,POS,LEN) F 返回一个字符串的子串 　　COS(X) F 余弦函数 　　CSEG F 
返回CS寄存器的当前值 　　DEC(X) F X:=X-1 　　DELETE(S,POS,LEN) P 删除一个字符串的子串 　　DISPOSE(P) P 
释放一个动态变量 　　DSEG F 返回DS寄存器的当前值 　　EOF(F) F 判断文件是否结束 　　EOLN(F) F 判断文件类型中的一行是否结束 
　　ERASE(F) P 删除一个存在的外部文件。 　　EXIT P 过程中止 　　EXP(X) F 以E为底的指数函数 　　FILEPOS(F) F 
文件记录的当前位置 　　FILESIZE(F) F 文件记录数 　　FILLCHAR(D,LEN,DATE) P 填充数值或字符 　　FLUSH(F) P 
清空文件缓存区 　　FRAC(X) F 取实形变量的小数部分 　　FREEMEM(P,I) P 释放变长动态变量 　　GETDIR(DRV,PATH) P 
取当前盘，当前目录 　　GETMEM(P,I) P 分配变长的动态变量，并把块地址存放在一个指针变量中 　　HALT P 
立即中止程序执行，返回TP编辑器或DOS 　　HI(I) F 返回一个变量的高位字节 　　INSERT(S,D,POS) F 
在一个字符串中某一位置开始插入一个子串 　　INT F 取整数部分 　　IORESULT F 返回最后一次输入/出操作的结果状态 　　LENGTH(S) F 
取字符串的长度 　　LN(R) F 求自然对数 　　LO(I) F 返回一个变量的低位字节 　　MAXAVAIL F 返回最大内存空间 　　MEMAVAIL F 
返回可用内存数目 　　MKDIR(PATH) P 建立一个子目录 　　MOVE(S,D,LEN) P 快传送 　　NEW(P) P 建立一个新的动态变量 
　　ODD(X) F 判断一个变量的值是否为奇数 　　OFS(X) F 侧变量偏移地址 　　ORD(CH) F 求一个字符的ASCII码值 
　　PARAMCOUNT F DOS参数串长度 　　PARAMSTR(N) F DOS参数串 　　PI F 圆周率的值 　　pos(str1,str2) f 
测一个字符串中包含的另一个子串的开始位置 　　pred(x) f 求前驱 　　ptr(i) f 指针赋值 　　random f 返回0~1之间的随机实数 
　　randomize p 初始化随机数发生器 　　read/readln(f,x) p 读入/输入数据 　　rename(f,str) p 给一个外部文件改名 
　　reset(f) p 打开文件，并将文件指针指向开始，并准备读数据 　　rewrite(f) p 打开文件，并将文件指针指向开始，准备写资料 
　　rmdir(path) p 删除一个子目录 　　round(x) f 求实数的近似数 　　runerror p 停止程序的运行 　　scrollto p 
滚动显示窗口的某部分内容 　　seek(f,n) p 将文件指针定位于文件f的第n个文件成分上 　　seekrof(f) f 定位到文件尾 
　　seekroln(f) f 定位到行尾 　　seg(n) f 测变量段地址 　　settextbuf(f) p 将输入/出缓冲区与一个文本文件建立关联 
　　sin(x) f 正弦函数 　　sizeof(x) f 测变量大小 　　sptr f 返回sp寄存器的当前值 　　sqr(x) f 平方 　　sqrt(x) 
f 平方根 　　sseg f 返回ss寄存器的当前值 　　str(i,s) f 将一个整数转换成字符串 　　succ(X) f 后继函数 　　swap(x) f 
交换一个变量的高位和低位字节 　　trunc(x) f 截去实数的小数部分 　　truncate(f) p 截去文件当前指针以后的内容 　　upcase(ch) 
f 将小写字母转换成大写字母 　　val(s,r,p) p 将一个字符串转换成数值 　　writeln(f,x) p 输出
二、dos单元
　　getdate p 返回系统当前日期 　　detftime p 返回最后一次写入的日期和时间 　　gettime p 返回系统当前时间 　　packtime 
p 转换系统日期和时间，封装成4个字节的长整形格式 　　setdate p 设置系统当前日期 　　setftime p 
写入新的系统日期和时间，覆盖系统最后一次写入的 系统日期和时间文件 　　settime p 设置系统当前时间 　　uppacktime p 
将系统日期和时间转换成纪录格式 　　diskfree f 返回指定磁盘可用剩余空间 　　disksize f 返回指定磁盘的总容量 
　　get/setverity p 返回/设置dos状态下的磁盘读写标记 　　fexpand f 返回函数名的全称 　　fsearch f 在一个目录中查找文件 
　　fsplit f 将一个文件名分成目录、文件名、扩展名 　　findfirst p 在当前目录或指定目录下查找第一个与给定属性相匹配的文件名 
　　findnext p 返回下一个满足匹配条件的文件名 　　getfattr p 返回文件的属性 　　setfattr p 设置文件属性 
　　gerintvec p 返回某个中断变量值 　　intr p 执行软中断 　　msdos p 执行dos 系统调用 　　setintvec p 设定中断值 
　　exec p 通过一个特定命令行执行特定程序段 　　keep p 中断程序的执行但仍驻留在内存中 　　swapvectors p 
用当前变量交换所有中断变量值 　　dosexitcode f 回到子程序出口 　　dosversion f 显示dos版本
三、crt单元
　　assigncrt(f) p 将文本文件f与显示器crt建立联系 　　clreol p 清除当前行光标所在位置以后的字符 　　clrscr p 
清除当前窗口或屏幕，光标返回到左上角 　　delay(t) p 等待t毫秒 　　delline p 清除光标所在行上所有内容 　　gotoxy(x,y) p 
将光标移到屏幕某处 　　highvideo p 选择高亮度显示字符 　　insline p 在当前光标位置插入空行 　　keypressed f 
测定键盘输入状态 　　lowvideo p 低亮度显示字符 　　normvideo p 选择正常文本属性从光标所在位置开始显示字符 　　nosound p 
关闭内部扬声器 　　readkey p 等待从键盘输入一个字符 　　sound(hz) p 以hz指定的频率发声 　　textbackground(soor) 
p 设置正文背景颜色 　　textcolor(color) p 设置正文前景颜色 　　textmode p 选择特定的文本显示模式 　　wherex/y f 
返回当前光标位置的坐标值 　　window(x1,y1,x2,y2) p 在屏幕定义一个文本窗口
四、其他单元
　　chain(f) p 目标程序链接 　　execute(f) p 执行目标程序 　　mark(p) p 标记动态变量 　　release(p) p 
释放动态变量区 　　srtinit p 屏幕初始化 　　crtline p 汉字屏幕方式转换 　　graphbackground(color) p 选择背景色 
　　graphcolormode p 中分辨率彩色图形方式，320*200彩色 　　graphmode p 中分辨率黑白图形方式，320*200黑白 
　　graphwindow(x1,y1,x2,y2,color)p 定义图形方式窗口 　　hires p 高分辨率单色图形方式，640*200黑白 
　　hirescolor(color) p 高分辨率彩色图形方式，640*200彩色 　　palette(color) p 中分辨率彩色图形颜色组 
　　ovrpath(path) p 指定覆盖文件路径 　　draw(x1,y1,x2,y2,color) p 画线 　　intr(n,m) p 8086中断调用 
　　plot(x,y,color) p 画点 　　random(integer) f 产生随机整数 　　seg(x) f 测变量段地址 
　　colortable(c1,c2,c3,c4) p 重定义颜色组 　　arc(x,y,radius,color) p 画圆弧 
　　circle(x,y,radius,color) p 画圆 　　getpic(buffer,x1,x2,y1,y2) p 屏幕转储到屏幕 
　　putpic(buffer,x,y) p 缓冲器转储到屏幕 　　getdotcolor(x,y) p 读点 　　fillscreen(color) p 
填充屏幕 　　fillshape(x,y,fillcol,bordercol) p 填充一个区域
 