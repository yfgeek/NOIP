
最大公约数
function gcd(a,b:integer):integer;
begin
    if b=0
       then
         gcd:=a
       else
          gcd:=gcd(b,a mod b);
end;

最小公倍数
function lcm(a,b:integer):integer;
var t:integer;
begin
     if a<b
       then
         begin
           t:=a;
           a:=b;
           b:=t;
         end;
     lcm:=a;
     while lcm mod b<>0 do
       inc(lcm,a);
end;

判断小范围内素数
function prime(x:integer):boolean;
var i:integer;
begin
    for i:=2 to trunc(sqrt(x)) do
      if x mod i=0
        then
          begin
            prime:=false;
            exit;
          end;
    prime:=true;
end;

判断大范围内素数
program style;
var pr:array [1..50000] of longint;
    l:longint;

procedure getprime;
var p:array [1..100000] of boolean;
      i,j:longint;
begin
    fillchar(p,sizeof(p),true);
    p[1]:=false;
    i:=2;
    while i<100000 do
      begin
        if p[i]
           then
             begin
               j:=2*i;
               while j<100000 do
                 begin
                   p[j]:=false;
                   inc(j,i);
                 end;
             end;
        inc(i);
      end;
    for i:=1 to 100000 do
      if p[i]
         then
           begin
             inc(l);
             pr[l]:=i;
           end;
end;

function prime(x:integer):boolean;
var i:longint;
begin
    prime:=false;
    for i:=1 to l do
       if pr[i]>=x
          then
            break
          else
            if x mod pr[i]=0 
              then
                exit;
    prime:=true;
end;
begin
l:=0;
getprime;
for l:=1 to 100000 do
    if prime(l)
       then
         write(l,' ');
end.